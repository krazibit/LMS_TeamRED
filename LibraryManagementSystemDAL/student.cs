//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace LibraryManagementSystemDAL
{
    public partial class student
    {
        #region Primitive Properties
    
        public virtual int reg_no
        {
            get;
            set;
        }
    
        public virtual string first_name
        {
            get;
            set;
        }
    
        public virtual string last_name
        {
            get;
            set;
        }
    
        public virtual string email
        {
            get;
            set;
        }
    
        public virtual string telephone
        {
            get;
            set;
        }
    
        public virtual string address
        {
            get;
            set;
        }
    
        public virtual System.DateTime date_of_birth
        {
            get;
            set;
        }
    
        public virtual System.DateTime enrolment_date
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> currently_registered
        {
            get;
            set;
        }
    
        public virtual int sex_id
        {
            get { return _sex_id; }
            set
            {
                if (_sex_id != value)
                {
                    if (sex != null && sex.id != value)
                    {
                        sex = null;
                    }
                    _sex_id = value;
                }
            }
        }
        private int _sex_id;
    
        public virtual int department_id
        {
            get { return _department_id; }
            set
            {
                if (_department_id != value)
                {
                    if (department != null && department.id != value)
                    {
                        department = null;
                    }
                    _department_id = value;
                }
            }
        }
        private int _department_id;

        #endregion
        #region Navigation Properties
    
        public virtual department department
        {
            get { return _department; }
            set
            {
                if (!ReferenceEquals(_department, value))
                {
                    var previousValue = _department;
                    _department = value;
                    Fixupdepartment(previousValue);
                }
            }
        }
        private department _department;
    
        public virtual sex sex
        {
            get { return _sex; }
            set
            {
                if (!ReferenceEquals(_sex, value))
                {
                    var previousValue = _sex;
                    _sex = value;
                    Fixupsex(previousValue);
                }
            }
        }
        private sex _sex;
    
        public virtual ICollection<student_book_loan> student_book_loan
        {
            get
            {
                if (_student_book_loan == null)
                {
                    var newCollection = new FixupCollection<student_book_loan>();
                    newCollection.CollectionChanged += Fixupstudent_book_loan;
                    _student_book_loan = newCollection;
                }
                return _student_book_loan;
            }
            set
            {
                if (!ReferenceEquals(_student_book_loan, value))
                {
                    var previousValue = _student_book_loan as FixupCollection<student_book_loan>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupstudent_book_loan;
                    }
                    _student_book_loan = value;
                    var newValue = value as FixupCollection<student_book_loan>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupstudent_book_loan;
                    }
                }
            }
        }
        private ICollection<student_book_loan> _student_book_loan;

        #endregion
        #region Association Fixup
    
        private void Fixupdepartment(department previousValue)
        {
            if (previousValue != null && previousValue.students.Contains(this))
            {
                previousValue.students.Remove(this);
            }
    
            if (department != null)
            {
                if (!department.students.Contains(this))
                {
                    department.students.Add(this);
                }
                if (department_id != department.id)
                {
                    department_id = department.id;
                }
            }
        }
    
        private void Fixupsex(sex previousValue)
        {
            if (previousValue != null && previousValue.students.Contains(this))
            {
                previousValue.students.Remove(this);
            }
    
            if (sex != null)
            {
                if (!sex.students.Contains(this))
                {
                    sex.students.Add(this);
                }
                if (sex_id != sex.id)
                {
                    sex_id = sex.id;
                }
            }
        }
    
        private void Fixupstudent_book_loan(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (student_book_loan item in e.NewItems)
                {
                    item.student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (student_book_loan item in e.OldItems)
                {
                    if (ReferenceEquals(item.student, this))
                    {
                        item.student = null;
                    }
                }
            }
        }

        #endregion
    }
}
