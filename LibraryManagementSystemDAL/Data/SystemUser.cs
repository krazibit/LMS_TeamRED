//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace LibraryManagementSystemDAL.Data
{
    public partial class systemuser
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Username
        {
            get;
            set;
        }
    
        public virtual string Password
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreateDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> LastLogin
        {
            get;
            set;
        }
    
        public virtual int UserRoleId
        {
            get { return _userRoleId; }
            set
            {
                if (_userRoleId != value)
                {
                    if (userrole != null && userrole.Id != value)
                    {
                        userrole = null;
                    }
                    _userRoleId = value;
                }
            }
        }
        private int _userRoleId;
    
        public virtual int SexId
        {
            get { return _sexId; }
            set
            {
                if (_sexId != value)
                {
                    if (sex != null && sex.Id != value)
                    {
                        sex = null;
                    }
                    _sexId = value;
                }
            }
        }
        private int _sexId;
    
        public virtual string FirstName
        {
            get;
            set;
        }
    
        public virtual string LastName
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<book> books
        {
            get
            {
                if (_books == null)
                {
                    var newCollection = new FixupCollection<book>();
                    newCollection.CollectionChanged += Fixupbooks;
                    _books = newCollection;
                }
                return _books;
            }
            set
            {
                if (!ReferenceEquals(_books, value))
                {
                    var previousValue = _books as FixupCollection<book>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupbooks;
                    }
                    _books = value;
                    var newValue = value as FixupCollection<book>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupbooks;
                    }
                }
            }
        }
        private ICollection<book> _books;
    
        public virtual ICollection<session> sessions
        {
            get
            {
                if (_sessions == null)
                {
                    var newCollection = new FixupCollection<session>();
                    newCollection.CollectionChanged += Fixupsessions;
                    _sessions = newCollection;
                }
                return _sessions;
            }
            set
            {
                if (!ReferenceEquals(_sessions, value))
                {
                    var previousValue = _sessions as FixupCollection<session>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupsessions;
                    }
                    _sessions = value;
                    var newValue = value as FixupCollection<session>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupsessions;
                    }
                }
            }
        }
        private ICollection<session> _sessions;
    
        public virtual sex sex
        {
            get { return _sex; }
            set
            {
                if (!ReferenceEquals(_sex, value))
                {
                    var previousValue = _sex;
                    _sex = value;
                    Fixupsex(previousValue);
                }
            }
        }
        private sex _sex;
    
        public virtual ICollection<studentbookloan> studentbookloans
        {
            get
            {
                if (_studentbookloans == null)
                {
                    var newCollection = new FixupCollection<studentbookloan>();
                    newCollection.CollectionChanged += Fixupstudentbookloans;
                    _studentbookloans = newCollection;
                }
                return _studentbookloans;
            }
            set
            {
                if (!ReferenceEquals(_studentbookloans, value))
                {
                    var previousValue = _studentbookloans as FixupCollection<studentbookloan>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupstudentbookloans;
                    }
                    _studentbookloans = value;
                    var newValue = value as FixupCollection<studentbookloan>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupstudentbookloans;
                    }
                }
            }
        }
        private ICollection<studentbookloan> _studentbookloans;
    
        public virtual userrole userrole
        {
            get { return _userrole; }
            set
            {
                if (!ReferenceEquals(_userrole, value))
                {
                    var previousValue = _userrole;
                    _userrole = value;
                    Fixupuserrole(previousValue);
                }
            }
        }
        private userrole _userrole;

        #endregion
        #region Association Fixup
    
        private void Fixupsex(sex previousValue)
        {
            if (previousValue != null && previousValue.systemusers.Contains(this))
            {
                previousValue.systemusers.Remove(this);
            }
    
            if (sex != null)
            {
                if (!sex.systemusers.Contains(this))
                {
                    sex.systemusers.Add(this);
                }
                if (SexId != sex.Id)
                {
                    SexId = sex.Id;
                }
            }
        }
    
        private void Fixupuserrole(userrole previousValue)
        {
            if (previousValue != null && previousValue.systemusers.Contains(this))
            {
                previousValue.systemusers.Remove(this);
            }
    
            if (userrole != null)
            {
                if (!userrole.systemusers.Contains(this))
                {
                    userrole.systemusers.Add(this);
                }
                if (UserRoleId != userrole.Id)
                {
                    UserRoleId = userrole.Id;
                }
            }
        }
    
        private void Fixupbooks(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (book item in e.NewItems)
                {
                    item.systemuser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (book item in e.OldItems)
                {
                    if (ReferenceEquals(item.systemuser, this))
                    {
                        item.systemuser = null;
                    }
                }
            }
        }
    
        private void Fixupsessions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (session item in e.NewItems)
                {
                    item.systemuser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (session item in e.OldItems)
                {
                    if (ReferenceEquals(item.systemuser, this))
                    {
                        item.systemuser = null;
                    }
                }
            }
        }
    
        private void Fixupstudentbookloans(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (studentbookloan item in e.NewItems)
                {
                    item.systemuser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (studentbookloan item in e.OldItems)
                {
                    if (ReferenceEquals(item.systemuser, this))
                    {
                        item.systemuser = null;
                    }
                }
            }
        }

        #endregion
    }
}
