//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace LibraryManagementSystemDAL.Data
{
    public partial class book
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Isbn
        {
            get;
            set;
        }
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual System.DateTime PublicationDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime InsertionDate
        {
            get;
            set;
        }
    
        public virtual bool Available
        {
            get;
            set;
        }
    
        public virtual int PublisherID
        {
            get { return _publisherID; }
            set
            {
                if (_publisherID != value)
                {
                    if (publisher != null && publisher.Id != value)
                    {
                        publisher = null;
                    }
                    _publisherID = value;
                }
            }
        }
        private int _publisherID;
    
        public virtual int DepartmentID
        {
            get { return _departmentID; }
            set
            {
                if (_departmentID != value)
                {
                    if (department != null && department.Id != value)
                    {
                        department = null;
                    }
                    _departmentID = value;
                }
            }
        }
        private int _departmentID;
    
        public virtual int AddedBy
        {
            get { return _addedBy; }
            set
            {
                if (_addedBy != value)
                {
                    if (systemuser != null && systemuser.Id != value)
                    {
                        systemuser = null;
                    }
                    _addedBy = value;
                }
            }
        }
        private int _addedBy;

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<bookauthor> bookauthors
        {
            get
            {
                if (_bookauthors == null)
                {
                    var newCollection = new FixupCollection<bookauthor>();
                    newCollection.CollectionChanged += Fixupbookauthors;
                    _bookauthors = newCollection;
                }
                return _bookauthors;
            }
            set
            {
                if (!ReferenceEquals(_bookauthors, value))
                {
                    var previousValue = _bookauthors as FixupCollection<bookauthor>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupbookauthors;
                    }
                    _bookauthors = value;
                    var newValue = value as FixupCollection<bookauthor>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupbookauthors;
                    }
                }
            }
        }
        private ICollection<bookauthor> _bookauthors;
    
        public virtual department department
        {
            get { return _department; }
            set
            {
                if (!ReferenceEquals(_department, value))
                {
                    var previousValue = _department;
                    _department = value;
                    Fixupdepartment(previousValue);
                }
            }
        }
        private department _department;
    
        public virtual publisher publisher
        {
            get { return _publisher; }
            set
            {
                if (!ReferenceEquals(_publisher, value))
                {
                    var previousValue = _publisher;
                    _publisher = value;
                    Fixuppublisher(previousValue);
                }
            }
        }
        private publisher _publisher;
    
        public virtual systemuser systemuser
        {
            get { return _systemuser; }
            set
            {
                if (!ReferenceEquals(_systemuser, value))
                {
                    var previousValue = _systemuser;
                    _systemuser = value;
                    Fixupsystemuser(previousValue);
                }
            }
        }
        private systemuser _systemuser;
    
        public virtual ICollection<studentbookloan> studentbookloans
        {
            get
            {
                if (_studentbookloans == null)
                {
                    var newCollection = new FixupCollection<studentbookloan>();
                    newCollection.CollectionChanged += Fixupstudentbookloans;
                    _studentbookloans = newCollection;
                }
                return _studentbookloans;
            }
            set
            {
                if (!ReferenceEquals(_studentbookloans, value))
                {
                    var previousValue = _studentbookloans as FixupCollection<studentbookloan>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupstudentbookloans;
                    }
                    _studentbookloans = value;
                    var newValue = value as FixupCollection<studentbookloan>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupstudentbookloans;
                    }
                }
            }
        }
        private ICollection<studentbookloan> _studentbookloans;

        #endregion
        #region Association Fixup
    
        private void Fixupdepartment(department previousValue)
        {
            if (previousValue != null && previousValue.books.Contains(this))
            {
                previousValue.books.Remove(this);
            }
    
            if (department != null)
            {
                if (!department.books.Contains(this))
                {
                    department.books.Add(this);
                }
                if (DepartmentID != department.Id)
                {
                    DepartmentID = department.Id;
                }
            }
        }
    
        private void Fixuppublisher(publisher previousValue)
        {
            if (previousValue != null && previousValue.books.Contains(this))
            {
                previousValue.books.Remove(this);
            }
    
            if (publisher != null)
            {
                if (!publisher.books.Contains(this))
                {
                    publisher.books.Add(this);
                }
                if (PublisherID != publisher.Id)
                {
                    PublisherID = publisher.Id;
                }
            }
        }
    
        private void Fixupsystemuser(systemuser previousValue)
        {
            if (previousValue != null && previousValue.books.Contains(this))
            {
                previousValue.books.Remove(this);
            }
    
            if (systemuser != null)
            {
                if (!systemuser.books.Contains(this))
                {
                    systemuser.books.Add(this);
                }
                if (AddedBy != systemuser.Id)
                {
                    AddedBy = systemuser.Id;
                }
            }
        }
    
        private void Fixupbookauthors(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (bookauthor item in e.NewItems)
                {
                    item.book = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (bookauthor item in e.OldItems)
                {
                    if (ReferenceEquals(item.book, this))
                    {
                        item.book = null;
                    }
                }
            }
        }
    
        private void Fixupstudentbookloans(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (studentbookloan item in e.NewItems)
                {
                    item.book = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (studentbookloan item in e.OldItems)
                {
                    if (ReferenceEquals(item.book, this))
                    {
                        item.book = null;
                    }
                }
            }
        }

        #endregion
    }
}
