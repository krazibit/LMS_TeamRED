//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace LibraryManagementSystemDAL.Data
{
    public partial class bookauthor
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int AuthorId
        {
            get { return _authorId; }
            set
            {
                if (_authorId != value)
                {
                    if (author != null && author.Id != value)
                    {
                        author = null;
                    }
                    _authorId = value;
                }
            }
        }
        private int _authorId;
    
        public virtual int BookId
        {
            get { return _bookId; }
            set
            {
                if (_bookId != value)
                {
                    if (book != null && book.Id != value)
                    {
                        book = null;
                    }
                    _bookId = value;
                }
            }
        }
        private int _bookId;

        #endregion
        #region Navigation Properties
    
        public virtual author author
        {
            get { return _author; }
            set
            {
                if (!ReferenceEquals(_author, value))
                {
                    var previousValue = _author;
                    _author = value;
                    Fixupauthor(previousValue);
                }
            }
        }
        private author _author;
    
        public virtual book book
        {
            get { return _book; }
            set
            {
                if (!ReferenceEquals(_book, value))
                {
                    var previousValue = _book;
                    _book = value;
                    Fixupbook(previousValue);
                }
            }
        }
        private book _book;

        #endregion
        #region Association Fixup
    
        private void Fixupauthor(author previousValue)
        {
            if (previousValue != null && previousValue.bookauthors.Contains(this))
            {
                previousValue.bookauthors.Remove(this);
            }
    
            if (author != null)
            {
                if (!author.bookauthors.Contains(this))
                {
                    author.bookauthors.Add(this);
                }
                if (AuthorId != author.Id)
                {
                    AuthorId = author.Id;
                }
            }
        }
    
        private void Fixupbook(book previousValue)
        {
            if (previousValue != null && previousValue.bookauthors.Contains(this))
            {
                previousValue.bookauthors.Remove(this);
            }
    
            if (book != null)
            {
                if (!book.bookauthors.Contains(this))
                {
                    book.bookauthors.Add(this);
                }
                if (BookId != book.Id)
                {
                    BookId = book.Id;
                }
            }
        }

        #endregion
    }
}
